{"version":3,"sources":["reducers/editSynonymGroupPopup/actionTypes.ts","assets/svg/loader.svg","layout/Button/index.tsx","layout/Spacing/index.tsx","layout/Input/index.tsx","reducers/editSynonymGroupPopup/reducer.ts","reducers/editSynonymGroupPopup/actions.ts","assets/svg/pencil.svg","assets/svg/delete.svg","features/EditSynonymGroupPopup/EditableListItem/styled.tsx","assets/svg/close.svg","layout/Popup/index.tsx","features/EditSynonymGroupPopup/styled.tsx","features/EditSynonymGroupPopup/EditableListItem/index.tsx","assets/svg/info.svg","layout/HelpInfo/index.tsx","features/EditSynonymGroupPopup/PopupHeader/styled.tsx","features/EditSynonymGroupPopup/PopupHeader/index.tsx","features/EditSynonymGroupPopup/index.tsx","features/App/index.tsx","styles/theme.tsx","assets/fonts/Circe-Bold.woff","assets/fonts/Circe-ExtraBold.woff","assets/fonts/Circe-ExtraLight.woff","assets/fonts/Circe-Light.woff","assets/fonts/Circe-Regular.woff","assets/fonts/Circe-Thin.woff","styles/FontFace.tsx","styles/GlobalStyles.tsx","reducers/store.ts","index.tsx"],"names":["ACTIONS","PrimaryButton","styled","button","attrs","focusable","isFetching","onMouseUp","e","target","blur","theme","colors","primary","main","contrast","LoaderSVG","css","AcceptanceButton","greenAccent","DeclineButton","redAccent","spacingToString","value","b","l","r","t","Spacing","div","p","m","Input","input","main50","initialState","currentEditableSynonymId","isEditingActive","isOpenPopup","nameInputValue","synonymList","changeNameInputValueAC","type","CHANGE_NAME_INPUT_VALUE","ItemContainer","li","EditButton","PencilSVG","DeleteButton","DeleteSVG","PopupOverlay","PopupContainer","section","h","size","w","PopupCloseButton","CloseSVG","PopupHeading","h2","PopupSeparator","BasePopupContainer","SynonymList","ul","PopupFooter","NameInputLabel","label","CancelEditButton","EditingButtonsContainer","EditableListItem","onDelete","onEdit","synonym","id","name","useSelector","state","editSynonymGroupPopup","dispatch","useDispatch","onClick","placeholder","onChange","currentTarget","EDIT_SYNONYM_SAVE","EDIT_SYNONYM_CANCEL","HelpInfo","span","InfoSVG","Title","h3","PopupHeader","CLOSE_POPUP","title","ADD_SYNONYM","disabled","Boolean","EditSynonymGroupPopup","useEffect","GET_SYNONYMS","map","EDIT_SYNONYM","DELETE_SYNONYM","SAVE_CHANGES","CLEAR_SYNONYMS","App","OPEN_POPUP","Color","contrast50","this","error","FontFace","CirceThin","CirceExtraLight","CirceLight","CirceRegular","CirceBold","CirceExtraBold","GlobalStyle","createGlobalStyle","reducers","combineReducers","action","Date","now","editableTodo","find","findIndex","confirmedDeleting","confirm","filter","window","localStorage","setItem","JSON","stringify","removeItem","synonyms","getItem","parse","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9df0104.chunk.js","sourcesContent":["export enum ACTIONS {\n  ADD_SYNONYM = 'EDIT_ADD_SYNONYMSYNONYM',\n  CHANGE_NAME_INPUT_VALUE = 'CHANGE_NAME_INPUT_VALUE',\n  CLEAR_SYNONYMS = 'CLEAR_SYNONYMS',\n  CLOSE_POPUP = 'CLOSE_POPUP',\n  DELETE_SYNONYM = 'DELETE_SYNONYM',\n  EDIT_SYNONYM = 'EDIT_SYNONYM',\n  EDIT_SYNONYM_CANCEL = 'EDIT_SYNONYM_CANCEL',\n  EDIT_SYNONYM_SAVE = 'EDIT_SYNONYM_SAVE',\n  GET_SYNONYMS = 'GET_SYNONYMS',\n  OPEN_POPUP = 'OPEN_POPUP',\n  SAVE_CHANGES = 'SAVE_CHANGES',\n}\n","export default __webpack_public_path__ + \"static/media/loader.70bb8f12.svg\";","import { BaseSyntheticEvent } from 'react'\nimport styled, { css } from 'styled-components'\nimport LoaderSVG from 'assets/svg/loader.svg'\n\ninterface IButton {\n  isFetching?: boolean,\n}\n\nexport const PrimaryButton = styled.button.attrs(({ isFetching }: IButton) => ({\n  focusable: !isFetching,\n  onMouseUp: (e: BaseSyntheticEvent) => e.target?.blur(),\n}))<IButton>`\n  position: relative;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: fit-content;\n  height: 30px;\n  padding: 8px 10px;\n\n  background: ${({ theme }) => theme.colors.primary.main};\n  border: 2px solid ${({ theme }) => theme.colors.primary.main};\n  border-radius: 3px;\n\n  color: ${({ theme }) => theme.colors.primary.contrast};\n  text-transform: lowercase;\n  font-weight: bold;\n  font-size: 14px;\n\n  cursor: pointer;\n\n  &:disabled {\n    opacity: .5;\n  }\n\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.primary.contrast};\n    color: ${({ theme }) => theme.colors.primary.main};\n  }\n\n  &::before {\n    content: '';\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    width: 18px;\n    height: 18px;\n\n    background-image: url(${LoaderSVG});\n    display: none;\n  }\n\n  ${({ isFetching }) => (\n    isFetching\n      ? css`\n          color: transparent;\n          pointer-events: none;\n          &::before  {\n            display: block;\n          }\n        `\n      : null\n  )}\n`\n\nexport const AcceptanceButton = styled(PrimaryButton)`\n  background-color: ${({ theme }) => theme.colors.greenAccent.main};\n  border: 2px solid ${({ theme }) => theme.colors.greenAccent.main};\n\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.greenAccent.contrast};\n    color: ${({ theme }) => theme.colors.greenAccent.main};\n  }\n`\n\nexport const DeclineButton = styled(PrimaryButton)`\n  background-color: ${({ theme }) => theme.colors.redAccent.main};\n  border: 2px solid ${({ theme }) => theme.colors.redAccent.main};\n\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.redAccent.contrast};\n    color: ${({ theme }) => theme.colors.redAccent.main};\n  }\n`\n","import styled from 'styled-components'\n\ninterface IDetailedSpace {\n  b?: string,\n  l?: string,\n  r?: string,\n  t?: string,\n}\n\ninterface ISpacing {\n  m?: string | IDetailedSpace,\n  p?: string | IDetailedSpace,\n}\n\nconst spacingToString = (value?: string | IDetailedSpace) => {\n  if (!value) {\n    return '0px'\n  } if (typeof value === 'string') {\n    return value\n  }\n  const {\n    b = '0px',\n    l = '0px',\n    r = '0px',\n    t = '0px',\n  } = value\n\n  return `${t} ${r} ${b} ${l}`\n}\n\nexport const Spacing = styled.div<ISpacing>`\n  width: fit-content;\n  padding: ${({ p }) => spacingToString(p)};\n  margin: ${({ m }) => spacingToString(m)};\n`\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n  display: block;\n  height: 40px;\n  width: 100%;\n  \n  font-size: 16px;\n  color: black;\n  \n  border-bottom: 1px solid ${({ theme }) => theme.colors.primary.main50};\n  background-color: transparent;\n  \n  &:focus {\n    outline: none;\n    border-bottom: 1px solid ${({ theme }) => theme.colors.primary.main};\n  }\n`\n","import filter from 'lodash/filter'\nimport find from 'lodash/find'\nimport findIndex from 'lodash/findIndex'\n\nimport {\n  IState,\n  TEditSynonymsGroupPopupActions,\n} from './types'\nimport { ACTIONS } from './actionTypes'\n\nconst initialState: IState = {\n  currentEditableSynonymId: 0,\n  isEditingActive: false,\n  isOpenPopup: false,\n  nameInputValue: '',\n  synonymList: [],\n}\n\nexport const editSynonymGroupPopup = (\n  state = initialState,\n  action: TEditSynonymsGroupPopupActions,\n) => {\n  switch (action.type) {\n    case ACTIONS.OPEN_POPUP: {\n      return {\n        ...state,\n        isOpenPopup: true,\n      }\n    }\n\n    case ACTIONS.CLOSE_POPUP: {\n      return {\n        ...state,\n        isOpenPopup: false,\n      }\n    }\n\n    case ACTIONS.ADD_SYNONYM: {\n      return {\n        ...state,\n        synonymList: [\n          ...state.synonymList,\n          {\n            id: Date.now(),\n            name: state.nameInputValue,\n          },\n        ],\n      }\n    }\n\n    case ACTIONS.CHANGE_NAME_INPUT_VALUE: {\n      return {\n        ...state,\n        nameInputValue: action.value,\n      }\n    }\n\n    case ACTIONS.EDIT_SYNONYM: {\n      const editableTodo = find(\n        state.synonymList,\n        ({ id }) => id === action.id,\n      )\n\n      return {\n        ...state,\n        currentEditableSynonymId: action.id,\n        isEditingActive: true,\n        nameInputValue: editableTodo?.name || '',\n      }\n    }\n\n    case ACTIONS.EDIT_SYNONYM_SAVE: {\n      const editableTodo = findIndex(\n        state.synonymList,\n        ({ id }) => id === state.currentEditableSynonymId,\n      )\n      const synonymList = [...state.synonymList]\n\n      synonymList[editableTodo].name = state.nameInputValue\n\n      return {\n        ...state,\n        currentEditableSynonymId: 0,\n        isEditingActive: false,\n        nameInputValue: '',\n        synonymList,\n\n      }\n    }\n\n    case ACTIONS.EDIT_SYNONYM_CANCEL: {\n      return {\n        ...state,\n        currentEditableSynonymId: 0,\n        isEditingActive: false,\n        nameInputValue: '',\n\n      }\n    }\n\n    case ACTIONS.DELETE_SYNONYM: {\n      const confirmedDeleting = confirm('Это не ошибка?')\n\n      if (!confirmedDeleting) return state\n\n      return {\n        ...state,\n        synonymList: filter(state.synonymList, ({ id }) => id !== action.id),\n      }\n    }\n\n    case ACTIONS.SAVE_CHANGES: {\n      // запрос в санку, пока тут криво будет висеть D:\n      window.localStorage.setItem('synonyms', JSON.stringify(state.synonymList))\n\n      return state\n    }\n\n    case ACTIONS.CLEAR_SYNONYMS: {\n      // запрос в санку, пока тут криво будет висеть D:\n      window.localStorage.removeItem('synonyms')\n\n      return {\n        ...state,\n        synonymList: [],\n      }\n    }\n\n    case ACTIONS.GET_SYNONYMS: {\n      // запрос в санку, пока тут криво будет висеть D:\n      const synonyms = window.localStorage.getItem('synonyms')\n\n      return {\n        ...state,\n        synonymList: synonyms ? JSON.parse(synonyms) : [],\n      }\n    }\n\n    default:\n      return state\n  }\n}\n","import { ACTIONS } from './actionTypes'\nimport {\n  IAddSynonymAction,\n  IChangeNameInputValueAction,\n  IClearSynonymsAction,\n  IClosePopupAction,\n  IDeleteSynonymAction,\n  IEditSynonymAction,\n  IEditSynonymCancelAction,\n  IEditSynonymSaveAction,\n  IGetSynonymsAction,\n  IOpenPopupAction,\n  ISaveChangesAction,\n} from './types'\n\nexport const addSynonymAC = (): IAddSynonymAction => ({\n  type: ACTIONS.ADD_SYNONYM,\n})\n\nexport const changeNameInputValueAC = (\n  value: string,\n): IChangeNameInputValueAction => ({\n  type: ACTIONS.CHANGE_NAME_INPUT_VALUE,\n  value,\n})\n\nexport const clearSynonymsAC = (): IClearSynonymsAction => ({\n  type: ACTIONS.CLEAR_SYNONYMS,\n})\n\nexport const closePopupAC = (): IClosePopupAction => {\n  // eslint-disable-next-line no-debugger\n  debugger\n  return ({\n    type: ACTIONS.CLOSE_POPUP,\n  })\n}\n\nexport const deleteSynonymAC = (id: number): IDeleteSynonymAction => ({\n  id,\n  type: ACTIONS.DELETE_SYNONYM,\n})\n\nexport const editSynonymAC = (id: number): IEditSynonymAction => ({\n  id,\n  type: ACTIONS.EDIT_SYNONYM,\n})\n\nexport const editSynonymSaveAC = (): IEditSynonymSaveAction => ({\n  type: ACTIONS.EDIT_SYNONYM_SAVE,\n})\n\nexport const editSynonymCancelAC = (): IEditSynonymCancelAction => ({\n  type: ACTIONS.EDIT_SYNONYM_CANCEL,\n})\n\nexport const getSynonymsAC = (): IGetSynonymsAction => ({\n  type: ACTIONS.GET_SYNONYMS,\n})\n\nexport const openPopupAC = (): IOpenPopupAction => ({\n  type: ACTIONS.OPEN_POPUP,\n})\n\nexport const saveChangesAC = (): ISaveChangesAction => ({\n  type: ACTIONS.SAVE_CHANGES,\n})\n","export default __webpack_public_path__ + \"static/media/pencil.6a21a915.svg\";","export default __webpack_public_path__ + \"static/media/delete.91ff8e7c.svg\";","import styled from 'styled-components'\nimport PencilSVG from 'assets/svg/pencil.svg'\nimport DeleteSVG from 'assets/svg/delete.svg'\n\nexport const ItemContainer = styled.li`\n  position: relative;\n  \n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 40px;\n  padding: 11px;\n  margin-bottom: 5px;\n\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 18px;\n  \n  background-color: #FFFFFF;\n  border-radius: 3px;\n`\n\n// TODO: Создать общий IconButton в будущем, который принимает размер и icon\nexport const EditButton = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 38px;\n  transform: translateY(-50%);\n\n  width: 14px;\n  height: 14px;\n\n  background-image: url(${PencilSVG});\n  background-color: transparent;\n  cursor: pointer;\n  opacity: .5;\n\n  &:hover {\n    opacity: 0;\n  }\n`\n\nexport const DeleteButton = styled(EditButton)`\n  background-image: url(${DeleteSVG});\n  right: 13px;\n`\n","export default __webpack_public_path__ + \"static/media/close.c4c834b2.svg\";","import styled from 'styled-components/macro'\nimport CloseSVG from 'assets/svg/close.svg'\n\nexport const PopupOverlay = styled.div`\n  position: fixed;\n  z-index: 10000;\n  left: 0;\n  top: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(0, 0, 0, 0.5);\n`\n\nexport const PopupContainer = styled.section<{\n  h?: string,\n  size?: string,\n  w?: string,\n}>`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  height: ${({ h, size }) => h || size || '500px'};\n  width: ${({ size, w }) => w || size || '500px'};\n  padding: 20px;\n\n  background-color: #EFEFEF;\n  box-shadow: 0px 20px 50px rgba(0, 0, 0, 0.25);\n`\n\nexport const PopupCloseButton = styled.button`\n  position: absolute;\n  top: 22px;\n  right: 22px;\n\n  display: block;\n  height: 18px;\n  width: 18px;\n  padding: 0;\n\n  border: none;\n  background-image: url(${CloseSVG});\n  cursor: pointer;\n`\n\nexport const PopupHeading = styled.h2`\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 28px;\n`\n\nexport const PopupSeparator = styled.div`\n  width: 100%;\n  height: 2px;\n  margin-top: 10px;\n\n  background-color: #DEDEDE;\n`\n","import {\n  PopupCloseButton,\n  PopupContainer as BasePopupContainer,\n} from 'layout/Popup'\nimport styled from 'styled-components'\n\nexport const PopupContainer = styled(BasePopupContainer)`\n  display: flex;\n  flex-direction: column;\n\n  @media only screen and (max-width: 600px) {\n    width: 100vw;\n    height: 100vh;\n  }\n`\n\nexport const SynonymList = styled.ul`\n  flex-grow: 1;\n  margin-top: 10px;\n  overflow-y: scroll;\n\n  @media only screen and (max-width: 600px) {\n    height: auto;\n  }\n`\n\nexport const PopupFooter = styled.div`\n  display: flex;\n  margin-top: 19px;\n`\n\nexport const NameInputLabel = styled.label`\n  display: block;\n  margin-bottom: 5px;\n\n  font-size: 14px;\n  line-height: 14px;\n  color: #00000080;\n`\n\n// Рефактор: Вынести popupCloseBtn в отдельный компонент closeButton\nexport const CancelEditButton = styled(PopupCloseButton)`\n  position: static;\n  margin-left: 10px;\n`\n\nexport const EditingButtonsContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\n","import React, { BaseSyntheticEvent } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { PrimaryButton } from 'layout/Button'\nimport { Input } from 'layout/Input'\nimport {\n  changeNameInputValueAC,\n  editSynonymSaveAC,\n  editSynonymCancelAC,\n} from 'reducers/editSynonymGroupPopup'\nimport { ISynonym } from 'reducers/editSynonymGroupPopup/types'\nimport { RootState } from 'reducers/store'\n\nimport {\n  EditButton,\n  DeleteButton,\n  ItemContainer,\n} from './styled'\nimport {\n  CancelEditButton,\n  EditingButtonsContainer,\n  NameInputLabel,\n} from '../styled'\n\ninterface IEditableListItem {\n  onDelete: () => void,\n  onEdit: () => void,\n  synonym: ISynonym,\n}\n\n// TODO: В дизайн систему, сделать общий элемент, и список тоже\nexport const EditableListItem = ({\n  onDelete,\n  onEdit,\n  synonym: {\n    id,\n    name,\n  },\n}: IEditableListItem) => {\n  const {\n    currentEditableSynonymId,\n    nameInputValue,\n  } = useSelector((state: RootState) => state.editSynonymGroupPopup)\n\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      { currentEditableSynonymId !== id && (\n        <>\n          <ItemContainer>\n            {name}\n            <EditButton onClick={onEdit} />\n            <DeleteButton onClick={onDelete} />\n          </ItemContainer>\n        </>\n      )}\n      {currentEditableSynonymId === id && (\n        <>\n          <NameInputLabel>\n            добавление синонима:\n            <Input\n              placeholder='Введите название'\n              value={nameInputValue}\n              onChange={(e: BaseSyntheticEvent) => dispatch(\n                changeNameInputValueAC(e.currentTarget.value),\n              )}\n            />\n          </NameInputLabel>\n          <EditingButtonsContainer>\n            <PrimaryButton\n              onClick={() => dispatch(editSynonymSaveAC())}\n            >\n              сохранить\n            </PrimaryButton>\n            <CancelEditButton\n              onClick={() => dispatch(editSynonymCancelAC())}\n            />\n          </EditingButtonsContainer>\n        </>\n      )}\n    </>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/info.8d9f5cb9.svg\";","import styled from 'styled-components'\nimport InfoSVG from 'assets/svg/info.svg'\n\n// Допустим у нас этот компонент всегда используется после какого то текста\n// и пока будет просто тайтл атрибут у него\nexport const HelpInfo = styled.span`\n  position: absolute;\n  right: -24px;\n  top: 50%;\n  transform: translateY(-50%);\n\n  width: 14px;\n  height: 14px;\n\n  background-image: url(${InfoSVG});\n  color: #00000080;\n`\n","import styled from 'styled-components/macro'\n\nexport const Title = styled.h3`\n  position: relative;\n  margin-top: 20px;\n  margin-bottom: 10px;\n\n  width: fit-content;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 22px;\n  color: #4F4F4F;\n`\n","import React, { BaseSyntheticEvent } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { PrimaryButton } from 'layout/Button'\nimport { HelpInfo } from 'layout/HelpInfo'\nimport { Input } from 'layout/Input'\nimport {\n  PopupHeading,\n  PopupCloseButton,\n  PopupSeparator,\n} from 'layout/Popup'\nimport {\n  changeNameInputValueAC,\n  addSynonymAC,\n  closePopupAC,\n} from 'reducers/editSynonymGroupPopup'\nimport { RootState } from 'reducers/store'\n\nimport { NameInputLabel } from '../styled'\nimport { Title } from './styled'\n\nexport const PopupHeader = () => {\n  const {\n    isEditingActive,\n    nameInputValue,\n  } = useSelector((state: RootState) => state.editSynonymGroupPopup)\n\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <PopupHeading>\n        Редактирование группы синонимов поисковых фраз\n      </PopupHeading>\n      <PopupCloseButton\n        onClick={() => dispatch(closePopupAC())}\n      />\n      <PopupSeparator />\n      <Title>\n        Синонимы\n        <HelpInfo title='Синонимы' />\n      </Title>\n      {!isEditingActive && (\n        <>\n          <NameInputLabel>\n            добавление синонима:\n            <Input\n              placeholder='Введите название'\n              value={nameInputValue}\n              onChange={(e: BaseSyntheticEvent) => dispatch(\n                changeNameInputValueAC(e.currentTarget.value),\n              )}\n            />\n          </NameInputLabel>\n          <PrimaryButton\n            onClick={() => dispatch(addSynonymAC())}\n            disabled={Boolean(!nameInputValue)}\n          >\n            добавить\n          </PrimaryButton>\n        </>\n      )}\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport map from 'lodash/map'\n\nimport { EditableListItem } from 'features/EditSynonymGroupPopup/EditableListItem'\nimport {\n  AcceptanceButton,\n  DeclineButton,\n} from 'layout/Button'\nimport {\n  PopupOverlay,\n  PopupSeparator,\n} from 'layout/Popup'\nimport { Spacing } from 'layout/Spacing'\nimport { RootState } from 'reducers/store'\nimport {\n  editSynonymAC,\n  getSynonymsAC,\n  clearSynonymsAC,\n  deleteSynonymAC,\n  saveChangesAC,\n} from 'reducers/editSynonymGroupPopup'\n\nimport { PopupHeader } from './PopupHeader'\nimport {\n  SynonymList,\n  PopupFooter,\n  PopupContainer,\n} from './styled'\n\n// TODO: Созадть modal-root для модалок и запорталить\nexport const EditSynonymGroupPopup = () => {\n  const {\n    synonymList,\n  } = useSelector((state: RootState) => state.editSynonymGroupPopup)\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getSynonymsAC())\n  }, [])\n\n  return (\n    <PopupOverlay>\n      <PopupContainer size='560px'>\n        <PopupHeader />\n        <SynonymList>\n          {map(synonymList, (synonym) => (\n            <EditableListItem\n              synonym={synonym}\n              onEdit={() => dispatch(editSynonymAC(synonym.id))}\n              onDelete={() => dispatch(deleteSynonymAC(synonym.id))}\n            />\n          ))}\n        </SynonymList>\n        <PopupSeparator />\n        <PopupFooter>\n          <Spacing m={{ r: '20px' }}>\n            <AcceptanceButton\n              onClick={() => dispatch(saveChangesAC())}\n            >\n              сохранить изменения\n            </AcceptanceButton>\n          </Spacing>\n          <DeclineButton\n            onClick={() => dispatch(clearSynonymsAC())}\n          >\n            очистить синонимы\n          </DeclineButton>\n        </PopupFooter>\n      </PopupContainer>\n    </PopupOverlay>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { PrimaryButton } from 'layout/Button'\nimport { Spacing } from 'layout/Spacing'\nimport { EditSynonymGroupPopup } from 'features/EditSynonymGroupPopup'\nimport { RootState } from 'reducers/store'\nimport { openPopupAC } from 'reducers/editSynonymGroupPopup'\n\nexport const App = () => {\n  const {\n    isOpenPopup,\n  } = useSelector((state: RootState) => state.editSynonymGroupPopup)\n\n  const dispatch = useDispatch()\n\n  return (\n    <>\n      <Spacing\n        m={{\n          l: 'auto',\n          r: 'auto',\n          t: '100px',\n        }}\n      >\n        <PrimaryButton onClick={() => dispatch(openPopupAC())}>\n          Сезам откройся\n        </PrimaryButton>\n      </Spacing>\n\n      {isOpenPopup && <EditSynonymGroupPopup />}\n    </>\n  )\n}\n","class Color {\n  main: string;\n  main50: string;\n\n  contrast: string;\n  contrast50: string;\n\n  constructor(main: string, contrast: string = '#ffffff') {\n    this.main = main\n    this.main50 = `${main}80`\n\n    this.contrast = contrast\n    this.contrast50 = `${contrast}80`\n  }\n}\n\nexport interface ITheme {\n  colors: {\n    error: Color,\n    greenAccent: Color,\n    primary: Color,\n    redAccent: Color,\n  },\n}\n\nexport const theme: ITheme = {\n  colors: {\n    error: new Color('#C23E42'),\n    greenAccent: new Color('#5E9574'),\n    primary: new Color('#344273'),\n    redAccent: new Color('#955E5E'),\n  },\n}\n","export default __webpack_public_path__ + \"static/media/Circe-Bold.8a1c4d2d.woff\";","export default __webpack_public_path__ + \"static/media/Circe-ExtraBold.02f7b8cb.woff\";","export default __webpack_public_path__ + \"static/media/Circe-ExtraLight.27c9b3b4.woff\";","export default __webpack_public_path__ + \"static/media/Circe-Light.0a23696b.woff\";","export default __webpack_public_path__ + \"static/media/Circe-Regular.b3583e41.woff\";","export default __webpack_public_path__ + \"static/media/Circe-Thin.1f69b3e5.woff\";","import { css } from 'styled-components'\nimport CirceBold from 'assets/fonts/Circe-Bold.woff'\nimport CirceExtraBold from 'assets/fonts/Circe-ExtraBold.woff'\nimport CirceExtraLight from 'assets/fonts/Circe-ExtraLight.woff'\nimport CirceLight from 'assets/fonts/Circe-Light.woff'\nimport CirceRegular from 'assets/fonts/Circe-Regular.woff'\nimport CirceThin from 'assets/fonts/Circe-Thin.woff'\n\nexport const FontFace = css`\n  @font-face {\n    font-family: \"Circe\";\n    src: url(${CirceThin}) format(\"woff\");\n    font-weight: 100;\n  }\n\n  @font-face {\n    font-family: \"Circe\";\n    src: url(${CirceExtraLight}) format(\"woff\");\n    font-weight: 200;\n  }\n\n  @font-face {\n    font-family: \"Circe\";\n    src: url(${CirceLight}) format(\"woff\");\n    font-weight: 300;\n  }\n\n  @font-face {\n    font-family: \"Circe\";\n    src: url(${CirceRegular}) format(\"woff\");\n    font-weight: 400;\n  }\n\n  @font-face {\n    font-family: \"Circe\";\n    src: url(${CirceBold}) format(\"woff\");\n    font-weight: 700;\n  }\n\n  @font-face {\n    font-family: \"Circe\";\n    src: url(${CirceExtraBold}) format(\"woff\");\n    font-weight: 900;\n  }\n\n`\n","import { createGlobalStyle } from 'styled-components'\nimport { FontFace } from './FontFace'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${FontFace}\n\n  *, *::before, *::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: \"Circe\", Arial, Helvetica, sans-serif;\n\n    \n  }\n\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: #aaa;\n    border-radius: 5px;\n    height: 20px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background: transparent;\n    border-bottom-right-radius: 20px;\n  }\n\n  ul {\n    list-style-type: none;\n  }\n\n  body {\n    font-size: 16px;\n  }\n\n  img {\n    width: 100%;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  button, input {\n    border: none;\n  }\n`\n","import { combineReducers, createStore } from 'redux'\nimport { editSynonymGroupPopup } from './editSynonymGroupPopup'\n\nconst reducers = combineReducers({ editSynonymGroupPopup })\n\nexport const store = createStore(reducers)\n\nexport type RootState = ReturnType<typeof reducers>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\n\nimport { App } from 'features/App'\nimport { theme } from 'styles/theme'\nimport { GlobalStyle } from 'styles/GlobalStyles'\nimport { store } from 'reducers/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}